\relax 
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Computation of the first and the next distance columns}}{1}}
\newlabel{FirstNextEDtabcolumn}{{1}{1}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces The recurrence for table \(\Rtab \). The values depend on column \(E_{\mathsf  {col}}^{j-1}\) and \(E_{\mathsf  {col}}^{j}\). Line 3 handles the case where the insertion edge is minimizing. Line 4 handles the case where the replacement edge is minimizing. Line 5 handles the case where the deletion edge is minimizing. If \(j>j_{0}\), then at least one of the three cases applies, so the \textit  {else if} in line 5 could be replaced by \textit  {otherwise}. As usual, with a distance value \(E_{\mathsf  {col}}^{j}(i)\) we can store which of the incoming edges is minimizing, as to remove the dependency on other entries in \(E_{\mathsf  {col}}^{j-1}\) and \(E_{\mathsf  {col}}^{j}\).}}{2}}
\newlabel{Rtabrecurrence}{{2}{2}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {3}{\ignorespaces A recursive function to compute crosspoints.}}{2}}
\newlabel{LinearDivideConquer}{{3}{2}}
